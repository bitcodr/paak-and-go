version: "3.8"
services:

  app:
    container_name: paak_app
    build:
      context: .
      dockerfile: docker/develop/Dockerfile
    restart: on-failure
    environment:
      - DB_HOST=postgres
      - SERVER_REST_PORT=8051
    ports:
      - 8051:8051
    volumes:
      - ./:/app
    networks:
      - backend
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8051/v1/health"]
      interval: 30s
      timeout: 3s
      retries: 3

   deploy:
     container_name: payment_service_deployment
     image: git.wki.ir:5050/idpay/next/payment-service
     restart: on-failure
     environment:
       - DB_HOST=postgres
       - SERVER_REST_PORT=8041
     ports:
       - 8041:8041
     volumes:
       - ./config.d:/app/config.d
     networks:
       - backend
     depends_on:
       - postgres
     healthcheck:
       test: ["CMD", "curl", "-f", "http://0.0.0.0:8041/v1/health"]
       interval: 30s
       timeout: 3s
       retries: 3

  postgres:
    container_name: payment_service_postgres
    image: postgres:12
    environment:
      DATABASE_HOST: "${DB_HOST}"
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
